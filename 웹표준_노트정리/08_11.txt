08_11


input 태그를 이용해서 실제 파일 받아내기!(html에서도 파일처리가 되는 애들이 있다!)
______________________________________________

●파일 입력받기
<input type="file" id="s_file" multiple/>
	multiple -> 다중파일을 선택할 수 있게 해주는 속성.

●사용자가 선택한 파일 가져오기
let file = document.getElementById("s_file").files[0];
   ◇files라는 예약어는 사용자가 지정한 파일객체를 가져옴.
   ◇type="file"형태는 보안상 .value로 값을 지정할 수 없음.(악성코드 문제)
   ◇속성 : .name  파일의 이름  /.size  파일의 크기 

	



https://otrodevym.tistory.com/entry/java-%EA%B8%B0%EC%B4%88-17-IO-%EA%B8%B0%EB%B0%98-%EC%9E%85%EC%B6%9C%EB%A0%A5
●자바의 입출력 (io)
    ◇자바에서 데이터는 스트림을 통해 입출력됨.
     따라서, 프로그램이 네트워크상 타프로그램과 데이터를 교환하기 위해선 양쪽 모두 입출력스트림이 따로 필요함.
    ◇스트림 = 단방향(출발지에서 도착지)으로 연속적으로 흘러간다는 개념

   ◆스트림클래스의 종류
	1. 바이트 기반 스트림 : 모든 것을 1Byte 씩 입출력. 음원/그림 같은 자료를 읽을 때 사용(문자 섞여있어도 ㄱㅊ)/ 데이터 유실이 상대적으로 적음
	프로그램을 기준으로 데이터가 들어옴=입력스트림(~inputStream) 데이터가 나감=출력스트림(~outputStream)

	2. 문자기반 스트림 : 모든 문자열을 2Byte 씩 입출력. 문자를 읽을 때 사용
	입력스트림(~Reader). 출력스트림(~Writer)





● innerHTML ≒  textContent
s_span.textContent = "Test";
s_span.innerHTML = "Test";

●<script>는 언제 수행되지?
스크립트 태그 속 내용은 구동될 때 바로 수행.
내가 원하는 타이밍에 수행시키고 싶으면 함수를 만들어야쥬(함수는 호출될 때 수행되므로)

●자바스크립트 = 동적 상호작용용 언어
자바스크립트는 웹-사용자 간의 동적인 상호작용(User Interaction)을 위해 만들어진 언어.
사용자가 발생시키는 이벤트와 미리 정의되어있는 로직이나 함수를 통해 웹은 동작함.



●오류가 발생 이벤트 감지자
reader.onerror = function(ev){
      alert(ev.target.error.code);
}
   ◇주요 오류넘버
	200:정상적인 처리(오류x)
	400번대: 이름, 경로 등이 잘못되었을 때 발생(404 파일경로 오류)
	500번대 : 클라이언트문제x 서버오류(서버의 syntax오류...)




●disabled  VS  readonly   
  둘다 커서는 동일하게 안들어옴.
  disabled = 비활성화(=사용할 수 없음)
	=> 서버로 데이터를 보낼 때 disabled는 파라미터로 보내지지 않아 서버가 받을 수 없음
   readonly = 읽기만 가능
	=> 사용자가 수정할 수는 없지만 서버로 보낼 때 보낼 수 있음.

   즉! 서버로 보내지느냐의 차이. 개인정보 수정에서 ID에 readonly를 많이 사용함
 

●.html(); (태그를 포함하여 내용 가져오기
선택한 요소 안의 내용을 가져오거나 다른 내용으로 바꾸는 jQuery 메서드.
$("#t1>tbody").html(msg);
○text(); (태그x 내용만 가져오기)


인코딩
UTF-8 = 유니코드 인코딩. 비영어권 문자표현. 문자 하나당 2byte씩 차지.

비트와 byte






_____________________________________

★★★★동기식통신 / 비동기식통신★★★★


클라이언트와 서버 사이의 통신이 일어날 때,
클라이언트는 서버로 요청(request)를 날리고 서버는 요청한 것을 바탕으로 자기할일을 하고 서버로 응답(response)해줌.
이때 응답을 받을 때 어떻게 하겠느냐에 따라 동기적 통신과 비동기적 통신을 나눔)

◆동기식(Synchronous)통신
   :request를 보낸 Thread는 response를 받을 때까지 Block상태가 되어 아무것도 하지 못하고 안함. 즉 두 서버 사이의 transaction을 맞추겠다는 뜻(두 서버간 데이터가 일치?)
   :따라서 응답값의 순서 및 요청에 대한 처리 결과 값가 보장됨.
   :은행계좌 입출금 시스템이 대표적인 예시

◆비동기식(Asynchronous)통신
    :request를 보낸 Thread는 response를 기다리지 않고 Non Block상태가 되어 다른 일을 함.
    :따라서 응답값의 순서를 보장할 수 없지만(처리가 더 빨랐던 다른 request의 값이 먼저 올지도..) 상대적으로 성능은 더 좋음
   :카카오톡에서 용량이 큰 사진과 메시지를 동시에 보낼 때
   :교수님은 은행업무와 동사무소업무를 혼자 하는것과 딸을 데려가는 것으로 설명.


◇각 브라우저마다 XHR(XML Http Request)를 데리고 있는데,
XHR의 메서드로 브라우저와 서버간의 네트워크 요청을 전송할 수 있음
웹이 다른 업무를 보고있는 동안 XHR이 서버에 요청하고 응답을 기다리고 있음(비동기식통신이 되는 것)
	*비동기식을 쓰면 페이지의 전체를 다 바꾸지 않고 특정한 부분만 바꿀 수 있음
	*즉. 싱글페이지를 사용할 때 매우 최적화 되어있음.
	*$.ajax({}).done().fail()이란 제이쿼리함수로 비동기식통신을 지원할 수 있음.

-----------선생님과 연습
오픈API 사이트 : http://makeup-api.herokuapp.com/


●서버호출 (비동기식)
$.ajax({
	url: "호출하고자_하는_서버경로", 
	data: {"서버로_보내고자_하는_파라미터(인자)"},
	type: "전송방식(get/post)",  //문자열로 둘중에 하나 넣으면 됨
	dataType: "서버로부터_응답되어오는_자원의_return되는_자료형"  // 주로 JSON
}).done(function(data){
	//요청에 성공했을 때 수행하는 곳.
	//data = 서버로부터 return되는 자원
}).fail(function(err){
	//요청시 오류가 발생했을 때 수행하는 곳. (오류가 없을 것 같다면 생략가능)
});

___________________________________________________________





https://developer.mozilla.org/ko/
여기 정리 너무 잘 되어있다.!!!!

객체생성자
사실... FileReader();는... 객체생성자야.
FileReader() 그 자체로 존재하고 있는 게 아니라 new와 함께 사용해서 FileReader()를 생성해내야 비로소!! 메모리안에 FileReader()의 방식으로 만든 객체가 생성되는거야!!
그리고 알지? 만든건 담지 않으면 사라진다는 것...!
그래서 변수에 담는거야! 굳이가 아니고!!
그리고 담는다기 보다는 메모리에 FileReader와 연결된 어디로든 문(레퍼런스타입/ 참조형)에 조금 더 가깝다고 볼 수 있어^^

그리고 FileReader는 함수라고 할 수 없어... 결이 비슷한 메소드 프로퍼티들을 잔뜩 모아놓은 그런... 그런친구인거야! 그래서 애초에
reader;이렇게 쓴다는게 말이 안돼! FileReader는 주머니야! 그 중에서 네가 뭘 쓸건지 골라서!
reader를 길로써 FileReader에 도달하는거고 거기서 result라는 프로퍼티에 담긴 값을 꺼내서는 쓸 수 있다!! (=reader.result;)


--------------------------------------------------


1. 리더라는 내장스트림객체를 굳이굳이 변수로 잡는...?
그니까 전부터 궁금했던게
변수라는 개념이
~를 담는다? ~와 동일해진다? ~의 속성을 모두 받는다?
기본형과 레퍼런스형 / 기본형은 스택영역에 실제값을 저장. 레퍼런스형은 스택영역에 '주소'를 저장, 힙 영역에 실제값이 저장되어 참조해서 갖다쓰는 것.


2. 그럼  reader; 이렇게만 적으면 파일리더가 수행되는 건가요?
ㄴㄴ

3. readAsText는 FileReader의 내장함수인건가요???

4.로드엔드 이벤트가 트리거 됐다......트리거= 발생 이라는 뜻...?
트리거 = 발생 ~ 개선... 그냥 그때그때 적당히 이해하면 될 듯 합니다.

5.이벤트 감지자라는 것은 onclick, onchange, onmouseover 같이 앞에 on이 달린 애들을 말하는건가용? 
원래는 addEventListener 이런건데.... 
요소.addEventListener(이벤트종류, function() {
  //이벤트가 일어났을 때 실행될 함수
});
위에 언급한 것들도 결국엔 click이 되고 나면~ 이런 의미니까 결국 이벤트감지자와 비슷해지는 것.














집에 가기 전에 다중파일을 전부 받아오고 하단에 밑줄긋고 다른파일 내용입력하고 이런거 만들어보자!(할거없으면ㅋㅋㅋ)
